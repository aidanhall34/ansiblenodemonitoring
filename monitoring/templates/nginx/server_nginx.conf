worker_processes auto;

events {
	worker_connections 768;
}
http {
    # Logging
    error_log /etc/nginx/logs/error.log warn;
    access_log /etc/nginx/logs/access.log;
    # All requests are redirected to HTTPS
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }
    # Grafana
    server {
        listen       443 ssl;
        server_name monitoring.inf.ah34.net;
            ssl_certificate      /etc/nginx/certificate.pem;
            ssl_certificate_key  /etc/nginx/certificate.key;
            ssl_session_cache    shared:SSL:1m;
            ssl_session_timeout  5m;
            ssl_protocols        TLSv1.3;
            ssl_prefer_server_ciphers   on;
        location / {
            set $upstream grafana:3000;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://grafana:3000;
        }
    }
    # Prometheus
    server {
        listen       9090 ssl;
            ssl_certificate      /etc/nginx/certificate.pem;
            ssl_certificate_key  /etc/nginx/certificate.key;
            ssl_session_cache    shared:SSL:1m;
            ssl_session_timeout  5m;
            ssl_protocols        TLSv1.3;
            ssl_prefer_server_ciphers   on;
        location / {
            set $upstream prometheus:9090;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://prometheus:9090;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    # Loki
    server {
        listen       3100 ssl;
        ssl_certificate      /etc/nginx/certificate.pem;
        ssl_certificate_key  /etc/nginx/certificate.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols        TLSv1.3;
        ssl_prefer_server_ciphers   on;
        location / {
            set $upstream loki-server:3100;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://loki-server:3100;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    # Node exporter
    server {
        listen       9100 ssl;
        ssl_certificate      /etc/nginx/certificate.pem;
        ssl_certificate_key  /etc/nginx/certificate.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols        TLSv1.3;
        ssl_prefer_server_ciphers   on;
        location / {
            set $upstream 172.17.0.1:9101;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://172.17.0.1:9101;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";

        }
    }
    # Docker metrics server
    server {
        listen       9323 ssl;
        ssl_certificate      /etc/nginx/certificate.pem;
        ssl_certificate_key  /etc/nginx/certificate.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols        TLSv1.3;
        ssl_prefer_server_ciphers   on;
        location / {
            set $upstream 172.17.0.1:9102;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            # Scrape from the node
            proxy_pass http://172.17.0.1:9102;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    {% if ansible_architecture != "aarch64" %}
    # Cadvisor
    server {
        listen       9324 ssl;
        ssl_certificate      /etc/nginx/certificate.pem;
        ssl_certificate_key  /etc/nginx/certificate.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols        TLSv1.3;
        ssl_prefer_server_ciphers   on;
        location / {
            set $upstream cadvisor:8080;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://cadvisor:8080;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    {% endif %}
}